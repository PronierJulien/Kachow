services:
  mongo-database:
    image: mongo:6.0
    container_name: mongo-database
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-database:/data/db
    expose:
      - 27017
    ports:
      - '27017:27017'
    restart: on-failure

  mongo_import:
    image: mongo
    container_name: mongo_import
    depends_on: ['mongo-database']
    volumes:
      - ./mongo_import:/mongo_import
    command: >
      /bin/sh -c "
      mongoimport --host mongo-database -u mongoadmin --password password --authenticationDatabase admin --db IMT_Monstres --collection monstres --type json --file /mongo_import/IMT_Monstres.monstre.json --jsonArray &&
      mongoimport --host mongo-database -u mongoadmin --password password --authenticationDatabase admin --db IMT_Joueur --collection joueurs --type json --file /mongo_import/IMT_Joueur.joueur.json --jsonArray &&
      mongoimport --host mongo-database -u mongoadmin --password password --authenticationDatabase admin --db IMT_Auth --collection users --type json --file /mongo_import/IMT_Auth.users.json --jsonArray
      "



  api-auth:
      build: ./api-auth
      container_name: api-auth
      ports: ['8080:8080']
      depends_on: ['mongo-database']

  api-invocations:
      build: ./api-invocations
      container_name: api-invocations
      ports: [ '8030:8080' ]
      depends_on: [ 'mongo-database', 'api-auth', 'api-monstres' ]

  api-joueur:
      build: ./api-joueur
      container_name: api-joueur
      ports: [ '8010:8080' ]
      depends_on: [ 'mongo-database', 'api-auth' ]

  api-monstres:
      build: ./api-monstres
      container_name: api-monstres
      ports: [ '8020:8080' ]
      depends_on: [ 'mongo-database', 'api-auth' ]

  api-front:
      build: ./api-front
      container_name: api-front
      ports: [ '80:80' ]
      depends_on: [ 'api-joueur', 'api-monstres', 'api-invocations' ]

volumes:
  mongo-database: