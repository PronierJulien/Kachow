version: '3.8'

services:
  mongo-demo:
    image: mongo
    container_name: mongo-demo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-demo:/data/db
    expose:
      - 27017
    ports:
      - '27017:27017'
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--quiet",
          "127.0.0.1/admin",
          "--eval",
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  api-auth:
    build: ../
    container_name: api-auth
    ports:
      - "8081:8080"
    depends_on:
      - mongo-demo
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongoadmin:password@mongo-demo:27017/authdb
    restart: on-failure

  api-invocations:
    build: ../
    container_name: api-invocations
    ports:
      - "8082:8080"
    depends_on:
      - mongo-demo
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongoadmin:password@mongo-demo:27017/invocationsdb
    restart: on-failure

  api-joueur:
    build: ../
    container_name: api-joueur
    ports:
      - "8083:8080"
    depends_on:
      - mongo-demo
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongoadmin:password@mongo-demo:27017/joueurdb
    restart: on-failure

  api-monstres:
    build: ../
    container_name: api-monstres
    ports:
      - "8084:8080"
    depends_on:
      - mongo-demo
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongoadmin:password@mongo-demo:27017/monstresdb
    restart: on-failure

volumes:
  mongo-demo: